name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - production

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
        redis-version: [6]

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports: ['5432:5432']

    steps:
      - uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt install -yqq build-essential libpq-dev

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1.187.0
        with:
          ruby-version: 3.3.3
          bundler-cache: true

      - name: Set Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - run: yarn install --frozen-lockfile # optional, --immutable

      - name: Redis Server in GitHub Actions
        uses: supercharge/redis-github-action@1.8.0
        with:
          redis-version: ${{ matrix.redis-version }}

      - name: Setup database
        env:
          DATABASE_HOST: localhost
          DATABASE_USER: postgres
          DATABASE_PASSWORD: postgres
          RAILS_ENV: test
          DISABLE_SPRING: 1
        run: |
          bin/rails database:prepare

      - name: Build and test with rspec
        env:
          CI: true
          DATABASE_HOST: localhost
          DATABASE_USER: postgres
          DATABASE_PASSWORD: postgres
          RAILS_ENV: test
          WITH_COVERAGE: true
          NODE_OPTIONS: --openssl-legacy-provider
          DISABLE_SPRING: 1
        run: |
          bundle exec rspec
      - name: Cypress run
        # Uses the official Cypress GitHub action https://github.com/cypress-io/github-action
        uses: cypress-io/github-action@v4
        with:
          # Starts web server for E2E tests - replace with your own server invocation
          # https://docs.cypress.io/guides/continuous-integration/introduction#Boot-your-server
          # start: bundle exec rails server
          # wait-on: 'http://localhost:3000' # Waits for above
          # Records to Cypress Cloud 
          # https://docs.cypress.io/guides/cloud/projects#Set-up-a-project-to-record
          start: yarn cy:server
          # quote the url to be safe against YML parsing surprises
          wait-on: 'http://localhost:5017'
          record: true
          parallel: true # Runs test in parallel using settings above
        env:
          PG_DATABASE: postgres
          PG_HOST: localhost
          PG_USER: postgres
          PG_PASSWORD: postgres
          RAILS_ENV: test
          # For recording and parallelization to work you must set your CYPRESS_RECORD_KEY
          # in GitHub repo → Settings → Secrets → Actions
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Creating a token https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: artifact
          path: tmp/capybara/
          retention-days: 90
